#!/usr/bin/env bash
# colory
#
# @description
#   Let terminal output more colorful, easy to debug.
#
# @usage
#   1. Copy this file into '/usr/bin/colory' and change 'chmod +x' for this file.
#   2. run your application, and pipe output to colory
#    example:
#      goapp serve 2>&1 | colory
#      printf "ERROR ..\n INFO .. DEBUG .. WARNING" | colory
#
# @author
#   kilfu0701 (kilfu0701@gmail.com)
#
# @version
#   1.0
#
# @license
#   MIT

declare -A color_sets
color_sets[red,0]="red"
color_sets[red,1]='\033[1;31m&\033[0m'
color_sets[green,0]="green"
color_sets[green,1]='\033[1;32m&\033[0m'
color_sets[yellow,0]="yellow"
color_sets[yellow,1]='\033[1;33m&\033[0m'
color_sets[blue,0]="blue"
color_sets[blue,1]='\033[1;34m&\033[0m'
color_sets[purple,0]="purple"
color_sets[purple,1]='\033[1;35m&\033[0m'
color_sets[cyan,0]="cyan"
color_sets[cyan,1]='\033[1;36m&\033[0m'
color_sets[white,0]="white"
color_sets[white,1]='\033[1;37m&\033[0m'

default_argv=(
    "DEBUG=purple"
    "INFO=cyan"
    "ERROR=red"
    "WARNING=yellow"
    "CRITICAL=red"
)

function parse_argv() {
    str=$'{\n'
    for i in "$@"
    do
        IFS='=' read -a arr <<< "$i"
        str+="gsub(\"${arr[0]}\", \"${color_sets[${arr[1]},1]}\");"
        str+=
        str+=$'\n'
        #idx=$((idx+1))
    done

    str+=$'  print\n}'
    echo $str
}

passed_argv=()
if [[ $# -eq 0 ]]; then
    passed_argv=${default_argv[@]}
else
    passed_argv=$@
fi

ret=$(parse_argv $passed_argv)
awk "$ret"
